# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

#----> 부터 추가
# \e[ 0 ; 36 m
# +++ |   || |
#  |  |   || +--- 색상 마크 끝남
#  |  |   |+--- 0회 1빨 2초 3노 4청 5보 6파 7흰
#  |  |   +---- 3x:글자색 4x:바탕색
#  |  +---- 00 01 02 흐림 03 이탤릭 04 밑줄 05 깜빡거림 06 07 반전 08 09 글자에 줄긋기 10
#  +---- 색상 마크 시작함
# \t 현재시각, \D{%a} 요일, \D{%y} 년2자리, \D{%m} 월, \D{%d} 일, \u 사용자 아이디,
# \h 호스트 이름, \w 현재의 전체 디렉토리, \n 줄바꿈, \W 현재 디렉토리만,
#--
cB="\[\e[" ;cE="\]" #-- 색깔 시작과 끝 표시
# 색깔지정의 구조: '\[' + '\e[' + '첫번째 1,2글자:글자형태' + '두번째 2글자:색깔' + '세번째 2글자:색깔' + 'm' + '\]'
# 첫번째 => 0:보통 1:굵게 2:흐림 3:이탤릭 4:밑줄 5:깜빡거림 6 7:반전 8 9:글자에 줄긋기 10:
# 두번째/세번째의 앞글자 => 3x:글자색 4x:바탕색
# 두번째/세번째의 뒷글자 => x0:회 x1:빨 x2:초 x3:노 x4:청 x5:보 x6:파 x7:흰
cGray="${cB}0;30m${cE}"; cRed="${cB}0;31m${cE}"; cGreen="${cB}0;32m${cE}"; cYellow="${cB}0;33m${cE}"; cBlue="${cB}0;34m${cE}"; cMagenta="${cB}0;35m${cE}"; cCyan="${cB}0;36m${cE}"; cWhite="${cB}0;37m${cE}"; cReset="${cB}0m${cE}" #-- 보통 글자색
uGray="${cB}4;30m${cE}"; uRed="${cB}4;31m${cE}"; uGreen="${cB}4;32m${cE}"; uYellow="${cB}4;33m${cE}"; uBlue="${cB}4;34m${cE}"; uMagenta="${cB}4;35m${cE}"; uCyan="${cB}4;36m${cE}"; uWhite="${cB}4;37m${cE}"; #-- 굵은 글자색
# '\t' 12:34:56 시분초
# '\D' 날짜처리 '{' '}' 사이에 넣는것: %Y=2022 %y=22 %m=01 %d=28 %a=금
# \u 사용자아이디 \h 호스트이름 \w 현재 디렉토리
#
PS1="${cGreen}\t${uMagenta}\D{%y}${cGreen}\D{%m}${cYellow}\D{%d}${cRed}\D{%a} ${cBlue}\u${cCyan}@${cGreen}\h ${cCyan}\w\n${cGreen}\W${cReset} $ " #-- vu2404desk 240529
#--
#--PS1='\e[0;36m\t\e[04;35m\D{%y}\e[0;32m\D{%m}\e[0;33m\D{%d}\e[0m\e[0;31m\D{%a}\e[0;34m \u\e[0;36m@\e[0;34m\h\e[0m \e[0;32m\w\e[0m\n\W $ '
#--

## cWhiteGreen="${cB}0;37;42m${cE}"
## cBlackGreen="${cB}0;30;42m${cE}"
#PS1='\e[0;36m\t\e[0m\e[0;33m\D{%a}\e[0;35m\D{%y}\e[0;36m\D{%m}\e[0;31m\D{%d} \e[0;36m\u\e[0;33m@\e[0;34m\h\e[0m \e[04;32m\w\e[0m\n\W $ '
#PS1='\e[0;36m\t\e[0m\e[0;31m\D{%a}\e[0;35m\D{%y}\e[04;32m\D{%m}\e[04;33m\D{%d}\e[0;34m \u\e[0;36m@\e[0;34m\h\e[0m \e[0;32m\w\e[0m\n\W $ '
#
## PS1='\e[0;36m\t\e[0m\e[0;31m\D{%a}\e[04;35m\D{%y}\e[0;32m\D{%m}\e[0;33m\D{%d}\e[0;34m \u\e[0;36m@\e[0;34m\h\e[0m \e[0;32m\w\e[0m\n\W $ '
#............||.............||||||.........||||||........||||||........||||||.........||........|........||..............||.....||!!
#........ 11:35:04 .......... 화 ........... 23 .......... 10 .......... 17 ........ yosj ...... @ . opi59zero2w .. 디렉토리전체 .. |줄바꾸고 !최종디렉토리
## PS1='\e[0;36m\t\e[04;35m\D{%y}\e[0;32m\D{%m}\e[0;33m\D{%d}\e[0m\e[0;31m\D{%a}\e[0;34m \u\e[0;36m@\e[0;34m\h\e[0m \e[0;32m\w\e[0m\n\W $ '
#............||.........||||||........||||||........||||||.............||||||.........||........|........||..............||.....||!!
#........ 11:35:04 ...... 23 .......... 10 .......... 17 ............... 화 ........ yosj ..... @ . opi59zero2w .. 디렉토리전체 .. |줄바꾸고 !최종디렉토리

#--
export EDITOR=vi
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias more='more -e'
alias ls='ls --color=auto'
alias ll='ls -l --color=auto'
alias grep='grep --color=auto'
#<---- 까지 추가

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
